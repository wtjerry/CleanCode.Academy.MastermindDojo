<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="bbv coding guidelines for production code" ToolsVersion="14.0">
    <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
        <!--
            CA1062: Validate arguments of public methods

            why disabled:
            - this creates a lot of noise. We rather explicitly validate only when we know something might go wrong
        -->
        <Rule Id="CA1062" Action="None" />

        <!--
            CA1006: Do not nest generic types in member signatures
	    -->
        <Rule Id="CA1006" Action="None" />

        <!--
            CA1014: Mark assemblies with CLSCompliantAttribute

            why disabled:
            - our assemblies are only used by c# code
        -->
        <Rule Id="CA1014" Action="None" />

        <!--
            CA1020: Avoid namespaces with few types

            why disabled:
            - it can make sense to group things even if the group is small
        -->
        <Rule Id="CA1020" Action="None" />

        <!--
            CA1024: Use properties where appropriate
        -->
        <Rule Id="CA1024" Action="None" />

        <!--
            CA1026: Default parameters should not be used

            why disabled:
            - according to docs.microsoft.com other compilers that target CLS may ignore default parameters, we do not use other compilers.
        -->
        <Rule Id="CA1026" Action="None" />

        <!--
            CA1032: Implement standard exception constructors

            why disabled:
            - those other constructors are used when serializing exceptions, which we dont do.
        -->
        <Rule Id="CA1032" Action="None" />

        <!--
            CA1034: Nested types should not be visible

            why disabled:
            - We use nested types for example for Resources (eg types that go from backend to frontend) to have all of them in the same file
        -->
        <Rule Id="CA1034" Action="None" />

        <!--
            CA1062: Validate arguments of public methods

            why disabled:
            - this creates a lot of noise. We rather explicitly validate only when we know something might go wrong
        -->
        <Rule Id="CA1062" Action="None" />

        <!--
             CA1405: COM visible type base types should be COM visible

             why disabled:
             - our assemblies are not used by any COM clients
        -->
        <Rule Id="CA1405" Action="None" />

        <!--
            CA1500: Variable names should not match field names

            Why disabled:
            - unnecessary, because all field names use the Prefix 'this' (SA1101)
            - potential time loss, because on wastes time thinking of a diffrent names
            - no real benefit
            - this rule was introduced to prevent programming errors for lengthy method bodies
              (see MSDN documentation). Because we avoid long methods and use ReSharper, this
              risk does not apply in our case.
        -->
        <Rule Id="CA1500" Action="None" />

        <!--
            CA1702: Compound words should be cased correctly

            Why disabled:
            - we use german as the main language in our project. With this some words
              are written diffrently (eg. "Backend" instead of "Back End").
        -->
        <Rule Id="CA1702" Action="None" />

        <!--
            CA1709: Identifiers should be cased correctly
        -->
        <Rule Id="CA1709" Action="None" />

        <!--
            CA2210: Assemblies should have valid strong names

            why disabled:
            - Rule deprecated
        -->
        <Rule Id="CA2210" Action="None" />

        <!--
            CA2225: Operator overloads have named alternates

            Why disabled:
            - we are not writting a library, but an application. Therefore this rule
              can be disabled according to recommendations from Microsoft (see MSDN).
        -->
        <Rule Id="CA2225" Action="None" />

        <!--
            CA2237: Mark ISerializable types with SerializableAttribute

            Why disabled:
            - It mostly warns about Exceptions not being ISerializable. We dont send Exceptions over the wire so there is no need for it.
        -->
        <Rule Id="CA2237" Action="None" />
    </Rules>
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
        <!--
            SA1600: Elements must be documented

            Why disabled:
            - as long as the elements (like method name) have a meaningfull name additional documentation
            becomes a overhead.
        -->
        <Rule Id="SA1600" Action="None" />

        <!--
            SA1633: FileMustHaveHeader

            Why disabled:
            - produces unnecessary noise
        -->
        <Rule Id="SA1633" Action="None" />

        <!--
            SA1413: Use trailing comma in multi-line initializers

            Why disabled:
            - the previous version of StyleCop seemed to like the exact opposite and therefore all our code code doesn't use a trailing comma
        -->
        <Rule Id="SA1413" Action="None" />

        <!--
            SA0001XmlCommentAnalysisDisabled

            Why disabled:
            - we do not generate xml documentation based on code documentation.
        -->
        <Rule Id="SA0001" Action="None" />

        <!--
            SA1128ConstructorInitializerMustBeOnOwnLine

            Why disabled:
            - simply unnecessary
        -->
        <Rule Id="SA1128" Action="None" />

        <!--
            SA1300: Element must begin with upper case letter

            Why disabled:
            - we use namespace names like `bbv` which don't begin with an upper case letter.
        -->
        <Rule Id="SA1300" Action="None" />

        <!--
            SA1600: Elements must be documented

            Why disabled:
            - as long as the elements (like method name) have a meaningfull name additional documentation
              becomes a overhead.
        -->
        <Rule Id="SA1600" Action="None" />

        <!--
            SA1602:	Enumeration items should be documented

            Why disabled:
            - as long as the enumeration names have a meaningfull name additional documentation
              becomes a overhead.
            - documentation should only be applied when necessary, not by default.
        -->
        <Rule Id="SA1602" Action="None" />

        <!--
            SA1604:	Element documentation must have summary

            Why disabled:
            - explicitly writting a summary when the name explains the purpose of a method, class or
              property sufficiently does not provide more benefits.
            - the code documentation is mainly used by and written for the internal development team.
            - the main goal is to write as less documentation as possible, but as much as necessary and useful.
        -->
        <Rule Id="SA1604" Action="None" />

        <!--
            SA1611:	Element parameters must be documented

            Why disabled:
            - explicitly documenting each parameter separately does not necessarily provide more benefits.
            - the code documentation is mainly used by and written for the internal development team.
            - the main goal is to write as less documentation as possible, but as much as necessary and useful.
        -->
        <Rule Id="SA1611" Action="None" />

        <!--
            SA1615:	Element return value must be documented

            Why disabled:
            - explicitly documenting the return value does not necessarily provide more benefits.
            - the code documentation is mainly used by and written for the internal development team.
            - the main goal is to write as less documentation as possible, but as much as necessary and useful.
        -->
        <Rule Id="SA1615" Action="None" />

        <!--
            SA1623:	The property's documentation summary text must begin with: 'Gets or sets'

            Why disabled:
            - no real benefit for field descriptions.
        -->
        <Rule Id="SA1623" Action="None" />

        <!--
            SA1633: FileMustHaveHeader

            Why disabled:
            - produces unnecessary noise
        -->
        <Rule Id="SA1633" Action="None" />

        <!--
            SA1652EnableXmlDocumentationOutput

            Why disabled:
            - we do not generate xml documentation based on code documentation.
        -->
        <Rule Id="SA1652" Action="None" />
    </Rules>
</RuleSet>
